{"version":3,"file":"bundle.min.js","sources":["../src/utils.ts","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/hashes/esm/ripemd160.js","../node_modules/@noble/hashes/esm/hmac.js","../src/convert.ts","../src/hash.ts","../src/base58.ts","../src/bech32.ts","../src/base64.ts","../src/buff.ts","../src/check.ts"],"sourcesContent":[null,"export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map",null,null,null,null,null,null,null],"names":["joinArray","arr","i","idx","size","reduce","prev","curr","length","buff","Uint8Array","bytes","number","n","Number","isSafeInteger","Error","b","lengths","TypeError","includes","assert","bool","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","assert$1","crypto","globalThis","undefined","createView","DataView","buffer","byteOffset","byteLength","rotr","word","shift","Uint32Array","toBytes","data","str","TextEncoder","encode","utf8ToBytes","Array","from","v","toString","padStart","Hash$1","clone","this","_cloneInto","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","SHA2","Hash","constructor","padOffset","isLE","super","pos","view","len","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","res","slice","destroy","to","Maj","a","c","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","SHA224","sha256","U32_MASK64","fromBig","le","u64$1","split","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","u64","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","Rho","Id","_","Pi","idxL","idxR","j","push","k","shifts","shiftsL","shiftsR","Kl","Kr","rotl","f","group","x","y","z","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","ripemd160","HMAC","_key","key","iHash","pad","oHash","buf","Object","getPrototypeOf","hmac","ec","dc","TextDecoder","strToBytes","hexToBytes","match","parseInt","numToBytes","num","of","byte","bytesToBinary","bin","count","bigToBytes","big","bytesToStr","decode","bytesToHex","chars","join","bytesToNum","bytesToBig","ArrayBuffer","String","serialize","JSON","stringify","revive","parse","Hex","normalize","Txt","serialzie","msg","s256","s512","ripe160","hash256","hash160","r160","hmac256","hmac512","ALPHABETS","name","charset","getAlphabet","alpha","addChecksum","checkTheSum","ret","chk","BaseX","padding","alphabet","d","repeat","encoded","replace","indexOf","Base58","Base58C","withSum","CHARSET","GENERATOR","ENCODINGS","version","const","polymod","values","p","top","hrpExpand","hrp","charCodeAt","convertBits","fromBits","toBits","acc","bits","maxVal","maxAcc","val","enc","combined","concat","mod","createChecksum","charAt","bechstr","char","hasLower","hasUpper","checkBounds","lastIndexOf","checkSeparatorPos","toLowerCase","substring","find","e","verifyChecksum","b32decode","hrpgot","decoded","Bech32","BASE64_MAP","B64URL_MAP","b64encode","input","urlSafe","b64decode","index","Base64","B64URL","Buff","endian","C.numToBytes","reverse","C.bigToBytes","binary","isArray","ct","C.binaryToBytes","any","C.buffer","raw","C.strToBytes","hex","C.hexToBytes","json","base64","b64url","bech32","b58chk","toNum","toStr","toHex","toBin","tob58chk","toBase64","toB64url","toHash","id","stream","Stream","C.bytesToNum","C.bytesToBig","type","toHmac","C.bytesToStr","C.bytesToHex","toJson","C.bytesToBinary","toBech32","prepend","append","start","end","begin","write","prefixSize","varInt","static","args","bytesLength","getRandomValues","randomBytes","C.hexify","C.serialize","C.revive","obj","test","peek","read","readSize","chunk","is","null","isHex","string","infinity","Infinity","bigint","class","prototype","startsWith","function","uint8","uint16","Uint16Array","uint32","array","object","Check","entries","isString","every","isNumber","isBigint"],"mappings":"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"}