interface TypeChecker {
    undefined: (x: any) => boolean;
    infinity: (x: any) => boolean;
    null: (x: any) => boolean;
    hex: (x: any) => boolean;
    string: (x: any) => boolean;
    bigint: (x: any) => boolean;
    number: (x: any) => boolean;
    array: (x: any) => boolean;
    uint8: (x: any) => boolean;
    uint16: (x: any) => boolean;
    uint32: (x: any) => boolean;
    buffer: (x: any) => boolean;
    class: (x: any) => boolean;
    function: (x: any) => boolean;
    object: (x: any) => boolean;
}
interface ArrayChecker {
    isString: (x: any[]) => boolean;
    isNumber: (x: any[]) => boolean;
    isBigint: (x: any[]) => boolean;
}
export declare const Check: {
    type: (x: any) => string;
    array: ArrayChecker;
    is: TypeChecker;
};
export {};
//# sourceMappingURL=check.d.ts.map